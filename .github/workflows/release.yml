name: Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.3.1)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: bun install
        
      - name: Generate Prisma Client
        run: bunx prisma generate
        
      - name: Push schema to database
        run: bunx prisma db push
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          
      - name: Run tests
        run: bun test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
          
      - name: Build
        run: bun run build
        
      - name: Update version if manual trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          
      - name: Get version from package.json
        if: github.event_name == 'release'
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          
      - name: Check if version exists on npm
        run: |
          if npm view pg-typesafe-triggers@${{ env.VERSION }} > /dev/null 2>&1; then
            echo "Version ${{ env.VERSION }} already exists on npm"
            exit 1
          fi
          
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release (if manual)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            ## What's Changed
            
            See [CHANGELOG.md](https://github.com/bewinxed/pg-typesafe-triggers/blob/main/CHANGELOG.md) for details.
            
            ## Installation
            
            ```bash
            npm install pg-typesafe-triggers@${{ env.VERSION }}
            # or
            bun add pg-typesafe-triggers@${{ env.VERSION }}
            ```
          draft: false
          prerelease: false